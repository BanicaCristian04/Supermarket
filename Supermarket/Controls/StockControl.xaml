<UserControl x:Class="Supermarket.Controls.StockControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Supermarket.Controls" xmlns:ctx="clr-namespace:Supermarket.ViewModels" xmlns:convert="clr-namespace:Supermarket.Converters"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.DataContext>
        <ctx:StockVM/>
    </UserControl.DataContext>
    <UserControl.Resources>

        <ControlTemplate x:Key="ComboBoxToggleButtonTemplate" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border x:Name="Border" Grid.ColumnSpan="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                <Path x:Name="Arrow" Grid.Column="1" Fill="Black" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Data" TargetName="Arrow" Value="M 0 4 L 4 0 L 8 4 Z" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="#AFAFAF" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
            <Setter Property="Background" Value="White" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Padding" Value="6,3,5,3" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="20" />
                            </Grid.ColumnDefinitions>
                            <Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="5"
                        Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" />
                            <ToggleButton Grid.Column="1" Focusable="false"  
                        ClickMode="Press" Template="{StaticResource ComboBoxToggleButtonTemplate}" />
                            <ContentPresenter Margin="5,3,23,3" VerticalAlignment="Center" HorizontalAlignment="Left" 
                        ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                        Content="{TemplateBinding SelectionBoxItem}" 
                        IsHitTestVisible="false" />
                            <TextBox x:Name="PART_EditableTextBox" Margin="3,3,23,3" Background="Transparent" 
                        IsReadOnly="{TemplateBinding IsReadOnly}" 
                        Visibility="Hidden" />
                            <Popup x:Name="Popup" Placement="Bottom" 
                        IsOpen="{TemplateBinding IsDropDownOpen}" 
                        AllowsTransparency="true" 
                        Focusable="false" 
                        PopupAnimation="Slide">
                                <Grid x:Name="DropDown" SnapsToDevicePixels="true" 
                            MinWidth="{TemplateBinding ActualWidth}" 
                            MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" BorderThickness="1" CornerRadius="5"
                                Background="White"/>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="White" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Padding" Value="4" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border CornerRadius="5" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" />
                        </Border>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>
        <Style x:Key="buttonMain" TargetType="Button">
            <Setter Property="Foreground" Value="#363636"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border  CornerRadius="5" Padding="5">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <convert:SellingPriceConvert x:Key="sellingPriceConvert" />
        <convert:InverseBooleanConverter x:Key="inverseBooleanConverter"/>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="53*" />
            <ColumnDefinition Width="11*"/>
            <ColumnDefinition Width="480" />

        </Grid.ColumnDefinitions>
        <Grid.Resources>
            <convert:StockConvert x:Key="stockConvert" />

        </Grid.Resources>
        <Grid Grid.ColumnSpan="2" Margin="0,0,23,0">

            <Grid  Width="224"   Height="390">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="80" />
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>



                </Grid.RowDefinitions>
                <TextBlock Text="Product"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Foreground="#363636"
                            FontSize="16"
                            FontWeight="SemiBold"
                            FontFamily="Montserrat"
                            Height="28" Width="78"
                            Margin="0,0,0,10"
                />
                <ComboBox x:Name="txtProduct"
                 ItemsSource="{Binding ProductsList}"
                 DisplayMemberPath="Name"
                 SelectedValue="{Binding ElementName=stocksGrid, Path=SelectedItem.Product.Name, UpdateSourceTrigger=PropertyChanged}"
                 SelectedValuePath="Name"
                 Margin="5,0,5,14"
                 Grid.Column="1"
                 IsSynchronizedWithCurrentItem="True"
/>
                <TextBlock Grid.Row="1"
                   Text="Quantity"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Center"
                   Foreground="#363636"
                   FontSize="16"
                   FontWeight="SemiBold"
                   FontFamily="Montserrat"
                   Height="28" Width="78"
                   Margin="0,0,0,10"/>
                <TextBox x:Name="txtQuantity" 
                 Grid.Row="1"
                 Text="{Binding ElementName=stocksGrid, Path=SelectedItem.Quantity, UpdateSourceTrigger=PropertyChanged}"
                 Style="{StaticResource TextBoxStyle}" Margin="85,0,5,20" Grid.ColumnSpan="2" VerticalAlignment="Top"/>
                <TextBlock Grid.Row="2"
                            Text="Measure"
                            
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Foreground="#363636" 
                            FontSize="16"
                            FontWeight="SemiBold"
                            FontFamily="Montserrat"
                            Height="28" Width="78"
                            Margin="0,0,0,15"
                />
                <TextBox x:Name="txtUnit" 
                        Grid.Row="2"
                        Text="{Binding ElementName=stocksGrid, Path=SelectedItem.UnitOfMeasure, UpdateSourceTrigger=PropertyChanged}"
                        Style="{StaticResource TextBoxStyle}" Margin="85,0,5,20" Grid.ColumnSpan="2" VerticalAlignment="Top"/>
                <TextBlock Grid.Row="3"
            Text="PurchasePrice"
            HorizontalAlignment="Left"
            VerticalAlignment="Center"
            Foreground="#363636" 
            FontSize="12"
            FontWeight="SemiBold"
            FontFamily="Montserrat"
            Height="28" Width="78"
            Margin="0,0,0,15"
/>
                <TextBox x:Name="txtPurchasePrice" 
                  convert:AttachedBehavior.SellingPriceTextBox="{Binding ElementName=txtSellingPrice}"
        Grid.Row="3"
        IsReadOnly="{Binding Path=IsUpdatable, Converter={StaticResource inverseBooleanConverter}}"
                         
        Text="{Binding ElementName=stocksGrid, Path=SelectedItem.PurchasePrice, UpdateSourceTrigger=PropertyChanged}"
        Style="{StaticResource TextBoxStyle}" Margin="85,0,5,20" Grid.ColumnSpan="2" VerticalAlignment="Top">


                </TextBox>
                <TextBlock Grid.Row="4"
            Text="SellingPrice"
            HorizontalAlignment="Left"
            VerticalAlignment="Center"
            Foreground="#363636" 
            FontSize="14"
            FontWeight="SemiBold"
            FontFamily="Montserrat"
            Height="28" Width="78"
            Margin="0,0,0,15"
/>
                <TextBox x:Name="txtSellingPrice" 
        Grid.Row="4"
        IsReadOnly="{Binding IsUpdatable}"
        Text="{Binding ElementName=stocksGrid, Path=SelectedItem.SellingPrice, UpdateSourceTrigger=PropertyChanged }"
                       
        Style="{StaticResource TextBoxStyle}" Margin="85,0,5,20" Grid.ColumnSpan="2" VerticalAlignment="Top"/>

                <TextBlock Grid.Row="5"
            Text="SupplyDate"
            HorizontalAlignment="Left"
            VerticalAlignment="Center"
            Foreground="#363636" 
            FontSize="14"
            FontWeight="SemiBold"
            FontFamily="Montserrat"
            Height="28" Width="78"
            Margin="0,0,0,15"
/>
                <DatePicker SelectedDate="{Binding ElementName=stocksGrid, Path=SelectedItem.SupplyDate,UpdateSourceTrigger=PropertyChanged}"
                            Margin="85,0,5,20" Grid.ColumnSpan="2" VerticalAlignment="Top" Grid.Row="5"></DatePicker>
                <TextBlock Grid.Row="6"
            Text="ExpirationDate"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Foreground="#363636" 
            FontSize="12"
            FontWeight="SemiBold"
            FontFamily="Montserrat"
            Height="28" Width="78"
            Margin="-3,0,0,0"
/>
                <DatePicker SelectedDate="{Binding ElementName=stocksGrid, Path=SelectedItem.ExpirationDate,UpdateSourceTrigger=PropertyChanged}"
            Margin="5,0,5,0" VerticalAlignment="Top" Grid.Row="6" Grid.Column="1"/>


                <StackPanel  Orientation="Horizontal" Margin="0,11,2,2" Grid.Row="7" Grid.ColumnSpan="2">
                    <Button Content="Add"
                            Margin="0 0 10 0"
                            Command="{Binding AddCommand}"
                            Style="{StaticResource buttonMain}"
                            Width="65" >
                        <Button.CommandParameter>
                            <MultiBinding Converter="{StaticResource stockConvert}">
                                <Binding ElementName="txtName" Path="Text"/>
                                <Binding ElementName="txtBarcode" Path="Text"/>
                                <Binding ElementName="txtCategory" Path="SelectedItem"/>
                                <Binding ElementName="txtProducer" Path="SelectedItem"/>
                            </MultiBinding>
                        </Button.CommandParameter>
                    </Button>

                    <Button Content="Update"
                            Margin="0,0,10,0"
                            Command="{Binding UpdateCommand}" CommandParameter="{Binding ElementName=productsGrid, Path=SelectedItem}" 
                            Style="{StaticResource buttonMain}"
                            Width="65">

                    </Button>
                    <Button Content="Delete"
                            Margin="0,0,10,0"
                            Style="{StaticResource buttonMain}"
                            Command="{Binding DeleteCommand}" CommandParameter="{Binding ElementName=productsGrid, Path=SelectedItem}"
                            Width="65">


                    </Button>

                </StackPanel>

            </Grid>
        </Grid>
        <DataGrid Name="stocksGrid" AutoGenerateColumns="False" ScrollViewer.VerticalScrollBarVisibility="Visible"
        ItemsSource="{Binding StocksList}"  IsReadOnly="True" Grid.Column="2"
                  >
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <i:InvokeCommandAction Command="{Binding ToggleIsUpdatableCommand}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <DataGrid.Columns>
                <DataGridTextColumn Header="ID" Binding="{Binding ProductID}"/>
                <DataGridTextColumn Header="Quantity" Binding="{Binding Quantity}"/>
                <DataGridTextColumn Header="UnitOfMeasuer" Binding="{Binding UnitOfMeasure}"/>
                <DataGridTextColumn Header="ProductName" Binding="{Binding Product.Name}"/>
                <DataGridTextColumn Header="ProductBarcode" Binding="{Binding Product.Barcode}"/>
                <DataGridTextColumn Header="ProductCategory" Binding="{Binding Product.Category.Name}"/>
                <DataGridTextColumn Header="ProductProducer" Binding="{Binding Product.Producer.Name}"/>
                <DataGridTextColumn Header="SupplyDate" Binding="{Binding SupplyDate}"/>
                <DataGridTextColumn Header="ExpirationDate" Binding="{Binding ExpirationDate}"/>
                <DataGridTextColumn Header="PurchasePrice" Binding="{Binding PurchasePrice}"/>
                <DataGridTextColumn Header="SellingPrice" Binding="{Binding SellingPrice}"/>

            </DataGrid.Columns>

        </DataGrid>

    </Grid>
</UserControl>
